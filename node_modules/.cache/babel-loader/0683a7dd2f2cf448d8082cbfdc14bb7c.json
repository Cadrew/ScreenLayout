{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\a763716\\\\Downloads\\\\ScreenLayout\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\a763716\\\\Downloads\\\\ScreenLayout\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\a763716\\\\Downloads\\\\ScreenLayout\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\a763716\\\\Downloads\\\\ScreenLayout\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\a763716\\\\Downloads\\\\ScreenLayout\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\a763716\\\\Downloads\\\\ScreenLayout\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\a763716\\\\Downloads\\\\ScreenLayout\\\\src\\\\ShowcaseLayout.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nvar ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nvar ShowcaseLayout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShowcaseLayout, _React$Component);\n\n  function ShowcaseLayout(props) {\n    var _this;\n\n    _classCallCheck(this, ShowcaseLayout);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowcaseLayout).call(this, props));\n    _this.state = {\n      currentBreakpoint: \"lg\",\n      compactType: \"vertical\",\n      mounted: false,\n      layouts: {\n        lg: props.initialLayout\n      }\n    };\n    _this.onBreakpointChange = _this.onBreakpointChange.bind(_assertThisInitialized(_this));\n    _this.onCompactTypeChange = _this.onCompactTypeChange.bind(_assertThisInitialized(_this));\n    _this.onLayoutChange = _this.onLayoutChange.bind(_assertThisInitialized(_this));\n    _this.onNewLayout = _this.onNewLayout.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ShowcaseLayout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        mounted: true\n      });\n    }\n  }, {\n    key: \"generateDOM\",\n    value: function generateDOM() {\n      return _.map(this.state.layouts.lg, function (l, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: l.static ? \"static\" : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, l.static ? React.createElement(\"span\", {\n          className: \"text\",\n          title: \"This item is static and cannot be removed or resized.\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Static - \", i) : React.createElement(\"span\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"iframe\", {\n          src: \"https://www.google.fr\",\n          width: \"100%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        })));\n      });\n    }\n  }, {\n    key: \"onBreakpointChange\",\n    value: function onBreakpointChange(breakpoint) {\n      this.setState({\n        currentBreakpoint: breakpoint\n      });\n    }\n  }, {\n    key: \"onCompactTypeChange\",\n    value: function onCompactTypeChange() {\n      var oldCompactType = this.state.compactType;\n      var compactType = oldCompactType === \"horizontal\" ? \"vertical\" : oldCompactType === \"vertical\" ? null : \"horizontal\";\n      this.setState({\n        compactType: compactType\n      });\n    }\n  }, {\n    key: \"onLayoutChange\",\n    value: function onLayoutChange(layout, layouts) {\n      this.props.onLayoutChange(layout, layouts);\n    }\n  }, {\n    key: \"onNewLayout\",\n    value: function onNewLayout() {\n      this.setState({\n        layouts: {\n          lg: generateRandomLayout()\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(ResponsiveReactGridLayout, Object.assign({}, this.props, {\n        layouts: this.state.layouts,\n        onBreakpointChange: this.onBreakpointChange,\n        onLayoutChange: this.onLayoutChange // WidthProvider option\n        ,\n        measureBeforeMount: false // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n        // and set `measureBeforeMount={true}`.\n        ,\n        useCSSTransforms: this.state.mounted,\n        compactType: this.state.compactType,\n        preventCollision: !this.state.compactType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), this.generateDOM()));\n    }\n  }]);\n\n  return ShowcaseLayout;\n}(React.Component);\n\nexport { ShowcaseLayout as default };\nShowcaseLayout.propTypes = {\n  onLayoutChange: PropTypes.func.isRequired\n};\nShowcaseLayout.defaultProps = {\n  className: \"layout\",\n  rowHeight: 30,\n  onLayoutChange: function onLayoutChange() {},\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  },\n  initialLayout: generateRandomLayout()\n};\n\nfunction generateRandomLayout() {\n  return _.map(_.range(0, 7), function (item, i) {\n    var y = Math.ceil(Math.random() * 4) + 1;\n    return {\n      x: _.random(0, 5) * 2 % 12,\n      y: Math.floor(i / 6) * y,\n      w: 2,\n      h: y,\n      i: i.toString(),\n      static: Math.random() < 0.05\n    };\n  });\n}","map":{"version":3,"sources":["C:/Users/a763716/Downloads/ScreenLayout/src/ShowcaseLayout.js"],"names":["React","PropTypes","_","Responsive","WidthProvider","ResponsiveReactGridLayout","ShowcaseLayout","props","state","currentBreakpoint","compactType","mounted","layouts","lg","initialLayout","onBreakpointChange","bind","onCompactTypeChange","onLayoutChange","onNewLayout","setState","map","l","i","static","breakpoint","oldCompactType","layout","generateRandomLayout","generateDOM","Component","propTypes","func","isRequired","defaultProps","className","rowHeight","cols","md","sm","xs","xxs","range","item","y","Math","ceil","random","x","floor","w","h","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nexport default class ShowcaseLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentBreakpoint: \"lg\",\n      compactType: \"vertical\",\n      mounted: false,\n      layouts: { lg: props.initialLayout }\n    };\n\n    this.onBreakpointChange = this.onBreakpointChange.bind(this);\n    this.onCompactTypeChange = this.onCompactTypeChange.bind(this);\n    this.onLayoutChange = this.onLayoutChange.bind(this);\n    this.onNewLayout = this.onNewLayout.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ mounted: true });\n  }\n\n  generateDOM() {\n    return _.map(this.state.layouts.lg, function(l, i) {\n      return (\n        <div key={i} className={l.static ? \"static\" : \"\"}>\n          {l.static ? (\n            <span\n              className=\"text\"\n              title=\"This item is static and cannot be removed or resized.\"\n            >\n              Static - {i}\n            </span>\n          ) : (\n            <span className=\"text\"><iframe src=\"https://www.google.fr\" width=\"100%\"></iframe></span>\n          )}\n        </div>\n      );\n    });\n  }\n\n  onBreakpointChange(breakpoint) {\n    this.setState({\n      currentBreakpoint: breakpoint\n    });\n  }\n\n  onCompactTypeChange() {\n    const { compactType: oldCompactType } = this.state;\n    const compactType =\n      oldCompactType === \"horizontal\"\n        ? \"vertical\"\n        : oldCompactType === \"vertical\"\n          ? null\n          : \"horizontal\";\n    this.setState({ compactType });\n  }\n\n  onLayoutChange(layout, layouts) {\n    this.props.onLayoutChange(layout, layouts);\n  }\n\n  onNewLayout() {\n    this.setState({\n      layouts: { lg: generateRandomLayout() }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {/*<div>\n          Current Breakpoint: {this.state.currentBreakpoint} ({\n            this.props.cols[this.state.currentBreakpoint]\n          }{\" \"}\n          columns)\n        </div>\n        <div>\n          Compaction type:{\" \"}\n          {_.capitalize(this.state.compactType) || \"No Compaction\"}\n        </div>\n        <button onClick={this.onNewLayout}>Generate New Layout</button>\n        <button onClick={this.onCompactTypeChange}>\n          Change Compaction Type\n        </button>*/}\n        <ResponsiveReactGridLayout\n          {...this.props}\n          layouts={this.state.layouts}\n          onBreakpointChange={this.onBreakpointChange}\n          onLayoutChange={this.onLayoutChange}\n          // WidthProvider option\n          measureBeforeMount={false}\n          // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n          // and set `measureBeforeMount={true}`.\n          useCSSTransforms={this.state.mounted}\n          compactType={this.state.compactType}\n          preventCollision={!this.state.compactType}\n        >\n          {this.generateDOM()}\n        </ResponsiveReactGridLayout>\n      </div>\n    );\n  }\n}\n\nShowcaseLayout.propTypes = {\n  onLayoutChange: PropTypes.func.isRequired\n};\n\nShowcaseLayout.defaultProps = {\n  className: \"layout\",\n  rowHeight: 30,\n  onLayoutChange: function() {},\n  cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n  initialLayout: generateRandomLayout()\n};\n\nfunction generateRandomLayout() {\n  return _.map(_.range(0, 7), function(item, i) {\n    var y = Math.ceil(Math.random() * 4) + 1;\n    return {\n      x: (_.random(0, 5) * 2) % 12,\n      y: Math.floor(i / 6) * y,\n      w: 2,\n      h: y,\n      i: i.toString(),\n      static: Math.random() < 0.05\n    };\n  });\n}\n"]},"metadata":{},"sourceType":"module"}